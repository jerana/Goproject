package main

import (
	"fmt"
	"strconv"
)

func main() {
	fmt.Println("vim-go")
}

func convertStringToInt(str string) int {
	var isSign bool = false
	var s []byte
	s = []byte(str)
	if s[0] == '-' {
		isSign = true
		s = s[1:]
	}
	var sum int
	for idx, c := range s {
		num := c - '0'
		sum = 10*sum + int(num)
	}
	if isSign {
		sum = -1 * sum
	}
	return sum
}
func converIntToString(num int) {
	var isSign = false
	if num < 0 {
		isSign = true
	}
	num = -1 * num
	var s []byte
	for num > 0 {
		c := '0' + num%10
		s = append(s, byte(c))
		num /= 10
	}
	if isSign {
		s = append(s, '-')
	}
}

//Look and say Problem

func lookandSay(num int) []byte {
	var s []byte
	s = []byte("1")
	for i := 1; i < num; i++ {
		s = convert(s)
	}
	return s
}
func convert(str []byte) []byte {
	count := 1
	var b []byte
	for i := 0; i < len(str)-1; i++ {
		for i+1 < len(str)-1 && str[i] == str[i+1] {
			count++
			i++
		}
		b = append(b, str[i])
		b = append(b, []byte(strconv.Itoa(count))...)
		//[]byte(strconv.Itoa(count)), str[i])
	}
	return b
}

//Make Valid IP Address from mingled string
func convertValidIpAddress(IPaddr []byte) *[]byte {
	//We can put period at 3 places in string to make it Valid Ip Address.
	//Will Put Period and check put other period other places make it Valid Ip address
	//For Every substring, Make String check routine to validate if Substring can make valid Ip address
	// Substring valid region is 1-255

	for i := 1; i < 4 && i < len(IPaddr); i++ {
		var result []string
		a := IPaddr[0:i]
		if isValidIp(a) {
			for j := 1; i+j < len(IPaddr) && j < 4; j++ {
				b := IPaddr[i:j]
				if isValidIp(b) {
					for k := 1; (i+j+k) < len(IPaddr) && k < 4; k++ {
						c := IPaddr[i+j : k]
						d := IPaddr[i+j+k:]
						if isValidIp(c) && isValidIp(d) {
							var finalStr []byte
							finalStr = append(finalStr, a...)
							finalStr = append(finalStr[len(a):], b...)
							finalStr = append(finalStr[len(a)+len(b):], c...)
							finalStr = append(finalStr[len(a)+len(b)+len(c):], d...)
							result = append(result, string(finalStr))

						}
					}
				}
			}
		}

	}
}

func isValidIp(s []byte) bool {
	if len(s) > 3 {
		return false
	}
	//"00","01","000" are also not valid string
	if s[0] == '0' && len(s) > 1 {
		return false
	}
	val := string.Atoi(s)
	if val > 255 || val < 0 {
		return false
	}
	return true

}
